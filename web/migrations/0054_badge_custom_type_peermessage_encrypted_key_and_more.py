# Generated by Django 5.1.6 on 2025-04-13 11:11

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import web.models


class Migration(migrations.Migration):

    dependencies = [
        ("web", "0053_goods_featured"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="badge",
            name="custom_type",
            field=models.CharField(
                blank=True, help_text="Custom badge type (optional, overrides predefined types)", max_length=100
            ),
        ),
        migrations.AddField(
            model_name="peermessage",
            name="encrypted_key",
            field=models.TextField(blank=True, default=""),
        ),
        migrations.AddField(
            model_name="peermessage",
            name="read_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="peermessage",
            name="starred",
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name="badge",
            name="badge_type",
            field=models.CharField(
                choices=[
                    ("perfect_attendance", "Perfect Attendance"),
                    ("participation", "Outstanding Participation"),
                    ("completion", "Course Completion"),
                    ("achievement", "Special Achievement"),
                    ("challenge", "Challenge Completion"),
                ],
                default="perfect_attendance",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="badge",
            name="course",
            field=models.ForeignKey(
                blank=True,
                help_text="The course associated with this badge, if any",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="badges",
                to="web.course",
            ),
        ),
        migrations.AlterField(
            model_name="badge",
            name="description",
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name="badge",
            name="image",
            field=models.ImageField(
                blank=True, help_text="Upload an image for the badge (200x200 recommended)", upload_to="badge_images/"
            ),
        ),
        migrations.AlterField(
            model_name="educationalvideo",
            name="uploader",
            field=models.ForeignKey(
                blank=True,
                help_text="User who uploaded the video. If null, the submission is considered anonymous.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="educational_videos",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Discount",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("code", models.CharField(max_length=20, unique=True)),
                ("discount_percentage", models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ("valid_from", models.DateTimeField(default=django.utils.timezone.now)),
                ("valid_until", models.DateTimeField(default=web.models.default_valid_until)),
                ("used", models.BooleanField(default=False)),
                ("course", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="web.course")),
                ("user", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name="ForumVote",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("vote_type", models.CharField(choices=[("up", "Upvote"), ("down", "Downvote")], max_length=4)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "reply",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to="web.forumreply",
                    ),
                ),
                (
                    "topic",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to="web.forumtopic",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="forum_votes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(
                            models.Q(("reply__isnull", True), ("topic__isnull", False)),
                            models.Q(("reply__isnull", False), ("topic__isnull", True)),
                            _connector="OR",
                        ),
                        name="vote_topic_xor_reply",
                    )
                ],
                "unique_together": {("user", "reply"), ("user", "topic")},
            },
        ),
    ]
